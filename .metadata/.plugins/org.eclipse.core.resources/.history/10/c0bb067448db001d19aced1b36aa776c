package com.hanati.library.data;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

import com.hanati.library.domian.model.BookLoan;
import com.hanati.library.domian.repository.BookLoanRepository;

public class BookLoanRepositorylmpl implements BookLoanRepository {
	ArrayList<BookLoan> bookLaonList = new ArrayList<>();

	Connection conn = null;
	PreparedStatement pstmt = null;
	ResultSet rs = null;
	String driver = "oracle.jdbc.driver.OracleDriver";
	String url = "jdbc:oracle:thin:@192.168.119.119:1521:dink";
	String user = "scott";
	String password = "tiger";
	Calendar calendar = Calendar.getInstance();
	SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

	@Override
	public List<BookLoan> loadBookLoan() {
		try {
			String sql = "SELECT bookloan.*, book.title AS bookname, member.name AS membername\n"
					+ "FROM bookloan\n"
					+ "JOIN book ON bookloan.bookid = book.id\n"
					+ "JOIN member ON bookloan.memberid = member.id ORDER BY deadline";
			Class.forName(driver);
			conn = DriverManager.getConnection(url, user, password);
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();

			while (rs.next()) {
				int id = rs.getInt("id");
				int bookId = rs.getInt("bookId");
				int memberId = rs.getInt("memberId");
				String bookName = rs.getString("bookName");
				String memberName = rs.getString("memberName");
				boolean isextension = rs.getBoolean("isextension");
				Date loanDate = rs.getDate("loanDate");
				String formattedLoanDate = dateFormat.format(loanDate);
				Date deadLine = rs.getDate("deadline");
				String formatteddeadLine = dateFormat.format(deadLine);

				BookLoan bookLoan = new BookLoan(id, bookId, memberId, bookName, memberName, isextension,
						formattedLoanDate, formatteddeadLine);
				bookLaonList.add(bookLoan);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}

		return bookLaonList;
	}

	@Override
	public void save(List<BookLoan> bookLoan) {
		// TODO Auto-generated method stub

	}

	@Override
	public void createBookLoan(BookLoan bookLoan) {
		// TODO Auto-generated method stub

	}

	@Override
	public void readBookLoan(List<BookLoan> bookLoanList) {
		for (BookLoan bookLoan : bookLoanList) {
			System.out.println("ID : " + bookLoan.getBookId() + "\t" + "도서 : " + bookLoan.getBookName() + "\t" + "회원 : "
					+ bookLoan.getMemberName() + "\t" + "연장여부 : " + bookLoan.isIsextension() + "\t" + "대출일 : "
					+ bookLoan.getLoanDate() + "\t" + "반납기한 : " + bookLoan.getDeadline());
		}

	}

	@Override
	public void updateBookLaon(BookLoan bookLoan, int id) {
		// TODO Auto-generated method stub

	}

	@Override
	public void deleteBookLoan(BookLoan bookLoan, int id) {
		// TODO Auto-generated method stub

	}

}
